from presets import PePreset

class Geiss__The_Fatty_Lumpkin_Sunkle_Tweaker(PePreset):

    name = 'Geiss__The_Fatty_Lumpkin_Sunkle_Tweaker'


    def per_frame(self):
        fRating=5
        pe.gamma=2
        pe.decay=0.9
        pe.echo_zoom=2
        pe.echo_alpha=0
        pe.echo_orient=0
        pe.wave_mode=2
        pe.wave_additive=1
        pe.wave_usedots=0
        bWaveThick=1
        bModWaveAlphaByVolume=0
        pe.wave_brighten=1
        pe.wrap=1
        pe.darken_center=0
        bRedBlueStereo=0
        pe.brighten=0
        pe.darken=0
        pe.solarize=0
        pe.invert=0
        pe.wave_a=10.14
        fWaveScale=1.235
        fWaveSmoothing=0.9
        pe.wave_mystery=0
        fModWaveAlphaStart=0.75
        fModWaveAlphaEnd=0.95
        pe.warp_speed=1
        pe.warp_scale=1.772
        pe.zoomexp=2.301
        fShader=0
        pe.zoom=1.099
        pe.rot=0
        pe.cx=0.5
        pe.cy=0.5
        pe.dx=0
        pe.dy=0
        pe.warp=0.29
        pe.sx=1
        pe.sy=1
        pe.wave_r=0.5
        pe.wave_g=0.5
        pe.wave_b=0.5
        pe.wave_x=0.5
        pe.wave_y=0.5
        pe.ob_size=0.01
        pe.ob_r=0
        pe.ob_g=0
        pe.ob_b=0
        pe.ob_a=0
        pe.ib_size=0.01
        pe.ib_r=0.25
        pe.ib_g=0.25
        pe.ib_b=0.25
        pe.ib_a=0
        pe.mv_x=12
        pe.mv_y=9
        pe.mv_dx=0
        pe.mv_dy=0
        pe.mv_l=0.9
        pe.mv_r=1
        pe.mv_g=1
        pe.mv_b=1
        pe.mv_a=0
        pe.wave_x = pe.wave_x + 0.250*( 0.60*math.sin(2.121*pe.time) + 0.40*math.sin(1.621*pe.time) );
        pe.wave_y = pe.wave_y + 0.250*( 0.60*math.sin(1.742*pe.time) + 0.40*math.sin(2.322*pe.time) );
        pe.wave_r = pe.wave_r + 0.500*( 0.60*math.sin(0.823*pe.time) + 0.40*math.sin(0.916*pe.time) );
        pe.wave_g = pe.wave_g + 0.500*( 0.60*math.sin(0.900*pe.time) + 0.40*math.sin(1.023*pe.time) );
        pe.wave_b = pe.wave_b + 0.500*( 0.60*math.sin(0.808*pe.time) + 0.40*math.sin(0.949*pe.time) );
        pe.zoom = pe.zoom + 0.010*( 0.60*math.sin(0.339*pe.time) + 0.40*math.sin(0.276*pe.time) );
        pe.rot = pe.rot + 0.035*( 0.60*math.sin(0.381*pe.time) + 0.40*math.sin(0.539*pe.time) );
        pe.cx = pe.cx + 0.030*( 0.60*math.sin(0.374*pe.time) + 0.40*math.sin(0.194*pe.time) );
        pe.cy = pe.cy + 0.037*( 0.60*math.sin(0.274*pe.time) + 0.40*math.sin(0.394*pe.time) );
        q = pe.time;
        pe.dx = pe.dx + 0.019*( 0.60*math.sin(100.334*q)+ 0.40*math.sin(250.277*q));
        pe.dy = pe.dy + 0.019*( 0.60*math.sin(200.384*q) + 0.40*math.sin(150.247*q));
        pe.sx = pe.sx + 0.010*( 0.60*math.sin(0.313*pe.time) + 0.40*math.sin(0.383*pe.time) );

    def per_pixel(self):
        pe.rot=pe.rot+pe.rad*0.18*math.sin(0.6*pe.time*0.439+0.4*pe.time*0.338);
