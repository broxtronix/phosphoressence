function nil_and_Aderassi_and_EMPR__Curling_Flower_Space_2_Electric_Boogaloo() {
  with (Math) {
    fRating=2;
    gamma=1;
    decay=0.945999;
    echo_zoom=1;
    echo_alpha=0;
    echo_orient=3;
    wave_mode=0;
    wave_additive=1;
    wave_usedots=0;
    bWaveThick=1;
    bModWaveAlphaByVolume=0;
    wave_brighten=0;
    wrap=1;
    darken_center=0;
    bRedBlueStereo=0;
    brighten=0;
    darken=0;
    solarize=0;
    invert=0;
    wave_a=1;
    fWaveScale=0.910342;
    fWaveSmoothing=0;
    wave_mystery=0.10806;
    fModWaveAlphaStart=0.71;
    fModWaveAlphaEnd=1.3;
    warp_speed=1;
    warp_scale=1;
    zoomexp=0.9;
    fShader=1;
    zoom=1;
    rot=0;
    cx=0.5;
    cy=0.5;
    dx=0;
    dy=0;
    warp=0.01;
    sx=1;
    sy=1;
    wave_r=0.543247;
    wave_g=0.328188;
    wave_b=0.521643;
    wave_x=0.733941;
    wave_y=0.406558;
    ob_size=0;
    ob_r=0.5849;
    ob_g=0.978985;
    ob_b=0.616979;
    ob_a=0;
    ib_size=0.26;
    ib_r=0.207509;
    ib_g=0.521497;
    ib_b=0.945927;
    ib_a=0;
    mv_x=0;
    mv_y=0;
    mv_dx=0;
    mv_dy=0;
    mv_l=0;
    mv_r=0;
    mv_g=0;
    mv_b=0;
    mv_a=0;
    wave_x = wave_x + 0.3*sin(2.2*time) - 0.15*cos(2.1*time) + 0.1*sin(1.2*time);
    wave_y = wave_y + 0.3*sin(2.3*time) - 0.1*sin(1.88*time) + 0.13*cos(time);
    dx = dx + 0.024*sin(1.24*time);
    dy = dy + 0.024*sin(1.12*time);
    wave_r = wave_r + 0.35*sin(1.13*time) + 0.1245*sin(2.34*time);
    wave_g = wave_g + 0.35*sin(1.23*time) + 0.12*sin(2.134*time);
    wave_b = wave_b + 0.35*sin(1.33*time) + 0.12*sin(2.5*time);
    wave_mystery = wave_mystery + 0.00*sin(time);
    turn = above(bass_att,turn)*2 + (1-above(bass_att,turn))*((turn-1.3)*0.96+1.3);
    turnr = equal(turn,2)*0.019*sin(time*6.6) + (1-equal(turn,2))*turnr;
    simp = simp * 0.35*sin(1.2*time) - 0.62*sin(0.7*time) + 1.5*sin(turn);
    rot = rot + 1.05*((0.25*simp)*10*turnr);
    cx = -42.68603921*sign(beat * beat);
    ib_a = max(beat - beat , volume + beatrate);
    ob_a = volume * beat;
    dx = -61.74305975*random_integer(floor(max(dx * volume , beat * beatrate)));
    ob_size = -43.66785884*sin(volume + volume);
    ib_a = -48.4728992*abs(47.9157567*acos(ib_a + beat));
    cy = max(volume * beat , volume + beat);
    mv_l = 39.23734426*log(if_milk(above(volume - volume , beat + volume) , beat * beatrate , beatrate + volume));
    ib_a = -7.89672136*acos(ib_a * beatrate);
    rot=if_milk(below(rot,-1.0), -1.0, rot);
    rot=if_milk(above(rot,1.0), 1.0, rot);
    cx=if_milk(below(cx,-1.0), -1.0, cx);
    cx=if_milk(above(cx,2.0), 2.0, cx);
    cy=if_milk(below(cy,-1.0), -1.0, cy);
    cy=if_milk(above(cy,2.0), 2.0, cy);
    dx=if_milk(below(dx,-1), -1, dx);
    dx=if_milk(above(dx,1.0), 1.0, dx);
    dy=if_milk(below(dy,-1), -1, dy);
    dy=if_milk(above(dy,1.0), 1.0, dy);
    wave_r=if_milk(below(wave_r,0.0), 0.0, wave_r);
    wave_r=if_milk(above(wave_r,1.0), 1.0, wave_r);
    wave_b=if_milk(below(wave_b,0.0), 0.0, wave_b);
    wave_b=if_milk(above(wave_b,1.0), 1.0, wave_b);
    wave_g=if_milk(below(wave_g,0.0), 0.0, wave_g);
    wave_g=if_milk(above(wave_g,1.0), 1.0, wave_g);
    wave_x=if_milk(below(wave_x,0.0), 0.0, wave_x);
    wave_x=if_milk(above(wave_x,1.0), 1.0, wave_x);
    wave_y=if_milk(below(wave_y,0.0), 0.0, wave_y);
    wave_y=if_milk(above(wave_y,1.0), 1.0, wave_y);
    wave_mystery=if_milk(below(wave_mystery,-1.0), -1.0, wave_mystery);
    wave_mystery=if_milk(above(wave_mystery,1.0), 1.0, wave_mystery);
    ob_size=if_milk(below(ob_size,0.0), 0.0, ob_size);
    ob_size=if_milk(above(ob_size,0.5), 0.5, ob_size);
    ob_a=if_milk(below(ob_a,0.0), 0.0, ob_a);
    ob_a=if_milk(above(ob_a,1.0), 1.0, ob_a);
    ib_a=if_milk(below(ib_a,0.0), 0.0, ib_a);
    ib_a=if_milk(above(ib_a,1.0), 1.0, ib_a);
    mv_l=if_milk(below(mv_l,0.0), 0.0, mv_l);
    mv_l=if_milk(above(mv_l,5.0), 5.0, mv_l);
    // per_pixel_1=rot=if_milk(above(bnot(1*bass),bnot(1*treb)),rot*sin(rad*sin(time)),-rot*sin(rad*cos(time)));
    // per_pixel_2=sy = bor(-59.87649858*sqr(y * ang) , rot - y);
    // per_pixel_3=dx = ang * rot;
    // per_pixel_4=zoomexp = -83.40497017*sqrt(x * q1);
    // per_pixel_5=rot = -64.34893906*asin(rot - rot);
    // per_pixel_6=warp = ang * q1;
    // per_pixel_7=warp = -55.12191951*pow(-6.81577921*tan(warp * rot) , rot * q1);
    // per_pixel_8=cy = -50.60476065*tan(if_milk(equal(x * rot , x - q1) , ang * rot , rot + x));
    // per_pixel_9=zoomexp=if_milk(below(zoomexp,0.01), 0.01, zoomexp);
    // per_pixel_10=zoomexp=if_milk(above(zoomexp,100.0), 100.0, zoomexp);
    // per_pixel_11=rot=if_milk(below(rot,-1.0), -1.0, rot);
    // per_pixel_12=rot=if_milk(above(rot,1.0), 1.0, rot);
    // per_pixel_13=warp=if_milk(below(warp,0.01), 0.01, warp);
    // per_pixel_14=warp=if_milk(above(warp,100.0), 100.0, warp);
    // per_pixel_15=cy=if_milk(below(cy,-1.0), -1.0, cy);
    // per_pixel_16=cy=if_milk(above(cy,2.0), 2.0, cy);
    // per_pixel_17=dx=if_milk(below(dx,-1), -1, dx);
    // per_pixel_18=dx=if_milk(above(dx,1.0), 1.0, dx);
    // per_pixel_19=sy=if_milk(below(sy,0.01), 0.01, sy);
    // per_pixel_20=sy=if_milk(above(sy,100.0), 100.0, sy);
  }
}
register_preset( nil_and_Aderassi_and_EMPR__Curling_Flower_Space_2_Electric_Boogaloo);
