function Unchained__Invariant_Under_Rigorous_Motions() {
  with (Math) {
    fRating=2;
    gamma=2;
    decay=0.992;
    echo_zoom=0.999999;
    echo_alpha=0.5;
    echo_orient=3;
    wave_mode=6;
    wave_additive=0;
    wave_usedots=0;
    bModWaveAlphaByVolume=0;
    wave_brighten=0;
    wrap=1;
    darken_center=0;
    bMotionVectorsOn=0;
    bRedBlueStereo=0;
    mv_x=12;
    mv_y=9;
    brighten=0;
    darken=0;
    solarize=0;
    invert=0;
    wave_a=1;
    fWaveScale=1;
    fWaveSmoothing=0;
    wave_mystery=0;
    fModWaveAlphaStart=0.85;
    fModWaveAlphaEnd=1.95;
    warp_speed=1;
    warp_scale=1;
    zoomexp=1.00815;
    fShader=0;
    zoom=1;
    rot=0;
    cx=0.5;
    cy=0.5;
    dx=0;
    dy=0;
    warp=1;
    sx=0.990099;
    sy=0.990099;
    wave_r=0.4;
    wave_g=0.4;
    wave_b=0.4;
    wave_x=0.5;
    wave_y=0.5;
    ob_size=0;
    ob_r=0;
    ob_g=0;
    ob_b=0;
    ob_a=0;
    ib_size=0;
    ib_r=0;
    ib_g=0;
    ib_b=0;
    ib_a=0;
    warp=0;
    old_bass_flop=bass_flop;
    old_treb_flop=treb_flop;
    old_mid_flop=mid_flop;
    chaos=.9+.1*sin(pulse);
    entropy=if_milk(bnot(entropy),2,if_milk(equal(pulse,-20),1+random_integer(3),entropy));
    bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
    bass_flop=abs(bass_flop-equal(bass_thresh,2));
    treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
    treb_flop=abs(treb_flop-equal(treb_thresh,2));
    mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
    mid_flop=abs(mid_flop-equal(mid_thresh,2));
    bass_changed=bnot(equal(old_bass_flop,bass_flop));
    mid_changed=bnot(equal(old_mid_flop,mid_flop));
    treb_changed=bnot(equal(old_treb_flop,treb_flop));
    bass_residual = bass_changed*sin(pulse*bass_thresh*.1*entropy) + bnot(bass_changed)*bass_residual;
    treb_residual = treb_changed*sin(pulse*treb_thresh*.1*entropy) + bnot(treb_changed)*treb_residual;
    mid_residual = mid_changed*sin(pulse*mid_thresh*.1*entropy) + bnot(mid_changed)*mid_residual;
    pulse=if_milk(above(abs(pulse),20),-20,pulse+.2*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.025);
    q1=mid_residual;
    q2=bass_residual;
    q3=treb_residual;
    q4=sin(pulse);
    q5=cos(pulse);
    wave_r=wave_r+.5*bass_residual;
    wave_r=wave_g+.5*mid_residual;
    wave_r=wave_b+.5*treb_residual;
    zoom=zoom-.0035*q1;
    rot=.05*q3;
    wave_mystery=below(q1,0);
    // per_pixel_1=disk_shif_milkt = if_milk(equal(abs(sin(ang)), if_milk(above(q1,0),0,1)), -rot, sign(q3)*.1);
    // per_pixel_2=timer=q4;
    // per_pixel_3=x_or_y=if_milk(above(q1,0),y,x);
    // per_pixel_4=rot = 0 + if_milk(equal(x_or_y*10%2,0),if_milk(below(timer,0),disk_shif_milkt,rot),if_milk(above(timer,0),-disk_shif_milkt,0));
    // per_pixel_5=zoom=zoom+rot;
  }
}
register_preset( Unchained__Invariant_Under_Rigorous_Motions);
