function EMPR__Random__Light_Speed_Racer() {
  with (Math) {
    fRating=2;
    gamma=2;
    decay=0.95;
    echo_zoom=3.007504;
    echo_alpha=0;
    echo_orient=1;
    wave_mode=0;
    wave_additive=0;
    wave_usedots=0;
    bWaveThick=0;
    bModWaveAlphaByVolume=0;
    wave_brighten=0;
    wrap=0;
    darken_center=1;
    bRedBlueStereo=0;
    brighten=0;
    darken=1;
    solarize=0;
    invert=0;
    wave_a=1;
    fWaveScale=0.880224;
    fWaveSmoothing=0;
    wave_mystery=-0.986474;
    fModWaveAlphaStart=0.75;
    fModWaveAlphaEnd=0.95;
    warp_speed=1;
    warp_scale=1;
    zoomexp=1.074097;
    fShader=1;
    zoom=1;
    rot=0;
    cx=0.5;
    cy=0.5;
    dx=0;
    dy=0;
    warp=1;
    sx=1;
    sy=1;
    wave_r=0.084198;
    wave_g=0.176891;
    wave_b=0.435862;
    wave_x=0.985303;
    wave_y=0.545416;
    ob_size=0.01;
    ob_r=0.532617;
    ob_g=0.151336;
    ob_b=0.92842;
    ob_a=0.134949;
    ib_size=0.01;
    ib_r=0.940831;
    ib_g=0.929317;
    ib_b=0.274101;
    ib_a=0.996525;
    mv_x=12;
    mv_y=9;
    mv_dx=-0.993034;
    mv_dy=0.179747;
    mv_l=0.055;
    mv_r=0.339724;
    mv_g=0.182042;
    mv_b=0.355223;
    mv_a=0.672775;
    warp = 0;
    wave_r = wave_r + .5*sin(time*333) + bass*.3;
    wave_g = wave_g + .5*sin(time*222) + treb*.3;
    wave_b = wave_b + .5*sin(time*111) + mid*.3;
    rot = .4*sin(mid_att*.05);
    wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
    wave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
    wave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );
    // Appended Code From C:\Program Files\Winamp\Plugins\MilkDrop\Self\Turbulence.milk
    wave_y = if_milk(below(wave_r - bass , mid * frame) , bass * bass , mid + time);
    wave_r = max(bass + wave_r , treb + wave_g);
    mv_l = 0.055 + wave_y * wave_x;
    wave_r = if_milk(below(wave_r * wave_y , treb * treb) , bass * zoom , bass * warp);
    ob_r = min(mid * bass , treb + treb);
    ib_b = if_milk(below(bass_att * wave_b , wave_g * wave_x) , if_milk(below(warp * mid , bass - wave_y) , bass_att * wave_r , treb * wave_g) , wave_r + wave_g);
    mv_b = min(wave_r + bass , mid * wave_b);
    wave_r=if_milk(below(wave_r,0.0), 0.0, wave_r);
    wave_r=if_milk(above(wave_r,1.0), 1.0, wave_r);
    wave_y=if_milk(below(wave_y,0.0), 0.0, wave_y);
    wave_y=if_milk(above(wave_y,1.0), 1.0, wave_y);
    ob_r=if_milk(below(ob_r,0.0), 0.0, ob_r);
    ob_r=if_milk(above(ob_r,1.0), 1.0, ob_r);
    ib_b=if_milk(below(ib_b,0.0), 0.0, ib_b);
    ib_b=if_milk(above(ib_b,1.0), 1.0, ib_b);
    mv_b=if_milk(below(mv_b,0.0), 0.0, mv_b);
    mv_b=if_milk(above(mv_b,1.0), 1.0, mv_b);
    mv_l=if_milk(below(mv_l,0.0), 0.0, mv_l);
    mv_l=if_milk(above(mv_l,5.0), 5.0, mv_l);
    wave_r=if_milk(below(wave_r,0.0), 0.0, wave_r);
    wave_r=if_milk(above(wave_r,1.0), 1.0, wave_r);
    ob_r=if_milk(below(ob_r,0.0), 0.0, ob_r);
    ob_r=if_milk(above(ob_r,1.0), 1.0, ob_r);
    wave_y=if_milk(below(wave_y,0.0), 0.0, wave_y);
    wave_y=if_milk(above(wave_y,1.0), 1.0, wave_y);
    wave_r=if_milk(below(wave_r,0.0), 0.0, wave_r);
    wave_r=if_milk(above(wave_r,1.0), 1.0, wave_r);
    ob_r=if_milk(below(ob_r,0.0), 0.0, ob_r);
    ob_r=if_milk(above(ob_r,1.0), 1.0, ob_r);
    ib_b=if_milk(below(ib_b,0.0), 0.0, ib_b);
    ib_b=if_milk(above(ib_b,1.0), 1.0, ib_b);
    mv_b=if_milk(below(mv_b,0.0), 0.0, mv_b);
    mv_b=if_milk(above(mv_b,1.0), 1.0, mv_b);
    wave_y=if_milk(below(wave_y,0.0), 0.0, wave_y);
    wave_y=if_milk(above(wave_y,1.0), 1.0, wave_y);
    // per_pixel_1=ray = pow(rad,1.8)+.05;
    // per_pixel_2=zoom = (ray/rad)*1.4 + .3*sin(ang*(bass*5))+(bass*.2);
    // per_pixel_3=rot=0;
    // per_pixel_4=dx = ((x-.5)+(y-.5)*.25*sin(time/10))*(2+.1*treb_att);
    // per_pixel_5=dy=(y-.5)*(2-.1*treb_att);
    // per_pixel_6=zoom =1;
    // per_pixel_7=;
    // per_pixel_8=cy = 0.5 + -1.72704607*sin(1.58401787*sin(y * time));
    // per_pixel_9=sy = 1 + if_milk(equal(ang + q1 , ang * bass_att) , warp - x , bass_att * sx);
    // per_pixel_10=cy=if_milk(below(cy,-1.0), -1.0, cy);
    // per_pixel_11=cy=if_milk(above(cy,2.0), 2.0, cy);
    // per_pixel_12=sy=if_milk(below(sy,0.01), 0.01, sy);
    // per_pixel_13=sy=if_milk(above(sy,100.0), 100.0, sy);
  }
}
register_preset( EMPR__Random__Light_Speed_Racer);
