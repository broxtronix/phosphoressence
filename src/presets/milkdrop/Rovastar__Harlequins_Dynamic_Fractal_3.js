function Rovastar__Harlequins_Dynamic_Fractal_3() {
  with (Math) {
    fRating=3;
    gamma=1;
    decay=0.96;
    echo_zoom=0.999609;
    echo_alpha=0;
    echo_orient=0;
    wave_mode=2;
    wave_additive=0;
    wave_usedots=0;
    bModWaveAlphaByVolume=0;
    wave_brighten=1;
    wrap=1;
    darken_center=0;
    bRedBlueStereo=0;
    brighten=0;
    darken=0;
    solarize=0;
    invert=0;
    wave_a=5.204482;
    fWaveScale=0.535238;
    fWaveSmoothing=0.27;
    wave_mystery=-0.4;
    fModWaveAlphaStart=0.75;
    fModWaveAlphaEnd=0.95;
    warp_speed=5.99579;
    warp_scale=1.331;
    zoomexp=1.01;
    fShader=0;
    zoom=0.998531;
    rot=0.002;
    cx=0.5;
    cy=0.5;
    dx=0;
    dy=0;
    warp=0.01;
    sx=1;
    sy=1;
    wave_r=0.5;
    wave_g=0.5;
    wave_b=0.5;
    wave_x=0.1;
    wave_y=0.86;
    ob_size=0.01;
    ob_r=0;
    ob_g=0.9;
    ob_b=0.2;
    ob_a=0;
    ib_size=0;
    ib_r=0.5;
    ib_g=0.5;
    ib_b=0.5;
    ib_a=0;
    mv_x=3.2;
    mv_y=48;
    mv_l=3.5;
    mv_r=0.7;
    mv_g=0.7;
    mv_b=0.3;
    mv_a=1;
    ob_r = 0.3 - 0.3*(0.5*sin(time*0.901)+ 0.3*cos(time*1.438));
    ob_g = 0.4- 0.4*sin(time*3.924);
    ob_b = 0.35 - 0.3*cos(time*2.816);
    cx = cx - 0.1*sin(time*0.342);
    cy = cy + 0.1*sin(time*0.453);
    warp =0;
    volume = 0.15*(bass_att+bass+mid+mid_att);
    beatrate = if_milk(equal(beatrate,0),1,if_milk(below(volume,0.01),1,beatrate));
    lastbeat = if_milk(equal(lastbeat,0),time,lastbeat);
    meanbass_att = 0.1*(meanbass_att*9 + bass_att);
    peakbass_att = if_milk(above(bass_att,peakbass_att),bass_att,peakbass_att);
    beat = if_milk(above(volume,0.8),if_milk(below(peakbass_att - bass_att, 0.05*peakbass_att),if_milk(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);
    beatrate = max(if_milk(beat,if_milk(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);
    peakbass_att = if_milk(equal(beat,0),if_milk(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);
    lastbeat = if_milk(beat,time,lastbeat);
    peakbass_att = max(if_milk(beat,bass_att,peakbass_att),1.1*meanbass_att);
    q5 = if_milk(beat,0.1*random_integer(1000),oldq5);
    oldq5 = q5;
    q3 = if_milk(beat,0.1*random_integer(1000),oldq3);
    oldq3 = q3;
    ib_size = 0.005 + 0.02*sin(time*0.963);
    ob_size = 0.02*abs(sin(time*0.7834));
    mv_r = mv_r + 0.3*sin(time*3.034);
    mv_g = mv_g + 0.3*sin(time*2.547);
    mv_b = mv_b - 0.3*sin(time*1.731);
    wave_r = wave_r + 0.5*sin(time*0.734);
    wave_b = wave_b + 0.5*sin(time*0.615);
    wave_b = wave_b + 0.5*sin(time*0.714);
    ib_r = ib_r + 0.5*sin(time*0.734);
    ib_g = ib_g + 0.5*sin(time*1.215);
    ib_b = ib_b + 0.5*sin(time*1.414);
    xamptarg = if_milk(equal(frame%15,0),min(0.5*volume*bass_att,0.5),xamptarg);
    xamp = xamp + 0.5*(xamptarg-xamp);
    xdir = if_milk(above(abs(xpos),xamp),-sign(xpos),if_milk(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));
    xaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);
    xspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);
    xpos = xpos + 0.001*xspeed;
    dx = 0.1*xpos;
    q2 = xpos;
    yamptarg = if_milk(equal(frame%15,0),min(0.3*volume*treb_att,0.5),yamptarg);
    yamp = yamp + 0.5*(yamptarg-yamp);
    ydir = if_milk(above(abs(ypos),yamp),-sign(ypos),if_milk(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));
    yaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);
    yspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);
    ypos = ypos + 0.001*yspeed;
    dy =0.1*ypos;
    q4 = ypos;
    ib_a = if_milk(beat,1,0);
    ob_a = if_milk(beat,1,0);
    // per_pixel_1=box =0.05+2*x%2+2*y%2;
    // per_pixel_2=q1 = 6.4+1.4*(sin(x+(0.6*time))-cos(y+(0.432*time)));
    // per_pixel_3=zoom = if_milk(above(box,1),q1*0.1,zoom);
    // per_pixel_4=rot = if_milk(above(box,1),3.5+ abs(sin(3*(q2+q4)))*(0.3*sin(0.385*time)+0.4*sin(time*0.254)+0.3*cos(time*0.311)),rot);
    // per_pixel_5=dx = if_milk(above(box,1),q4*4,dx);
    // per_pixel_6=dy= if_milk(above(box,1),q2*4,dy);
  }
}
register_preset( Rovastar__Harlequins_Dynamic_Fractal_3);
