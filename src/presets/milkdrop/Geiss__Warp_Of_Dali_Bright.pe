from presets import PePreset

class Geiss__Warp_Of_Dali_Bright(PePreset):

    name = 'Geiss__Warp_Of_Dali_Bright'


    def per_frame(self):
        pe.gamma=2
        pe.decay=0.98
        pe.echo_zoom=2
        pe.echo_alpha=0
        pe.echo_orient=0
        pe.wave_mode=2
        pe.wave_additive=1
        pe.wave_usedots=0
        bModWaveAlphaByVolume=0
        pe.wave_brighten=1
        pe.wrap=1
        pe.darken_center=0
        bMotionVectorsOn=0
        bRedBlueStereo=0
        pe.mv_x=12
        pe.mv_y=9
        pe.brighten=0
        pe.darken=0
        pe.solarize=0
        pe.invert=0
        pe.wave_a=2.7
        fWaveScale=1.053
        fWaveSmoothing=0.8
        pe.wave_mystery=0
        fModWaveAlphaStart=0.75
        fModWaveAlphaEnd=0.95
        pe.warp_speed=1
        pe.warp_scale=2.853
        pe.zoomexp=3.6
        fShader=0
        pe.zoom=1.046
        pe.rot=0.02
        pe.cx=0.5
        pe.cy=0.5
        pe.dx=0
        pe.dy=0
        pe.warp=0.969
        pe.sx=1
        pe.sy=1
        pe.wave_r=0.6
        pe.wave_g=0.6
        pe.wave_b=0.6
        pe.wave_x=0.5
        pe.wave_y=0.47
        pe.wave_r = pe.wave_r + 0.400*( 0.60*math.sin(0.933*pe.time) + 0.40*math.sin(1.045*pe.time) );
        pe.wave_g = pe.wave_g + 0.400*( 0.60*math.sin(0.900*pe.time) + 0.40*math.sin(0.956*pe.time) );
        pe.wave_b = pe.wave_b + 0.400*( 0.60*math.sin(0.910*pe.time) + 0.40*math.sin(0.920*pe.time) );
        pe.zoom = pe.zoom + 0.010*( 0.60*math.sin(0.339*pe.time) + 0.40*math.sin(0.276*pe.time) );
        pe.rot = pe.rot + 0.050*( 0.60*math.sin(0.381*pe.time) + 0.40*math.sin(0.579*pe.time) );
        pe.cx = pe.cx + 0.030*( 0.60*math.sin(0.374*pe.time) + 0.40*math.sin(0.294*pe.time) );
        pe.cy = pe.cy + 0.030*( 0.60*math.sin(0.393*pe.time) + 0.40*math.sin(0.223*pe.time) );
        pe.decay=pe.decay-0.02*math.pow(0.5+0.5*math.sin(pe.time*0.9),3.2);

    def per_pixel(self):
        spe.x=spe.x-0.04*math.sin((pe.y*2-1)*6+(pe.x*2-1)*7+pe.time*1.59);
        pe.spe.y=pe.spe.y-0.04*math.sin((pe.x*2-1)*8-(pe.y*2-1)*5+pe.time*1.43);
