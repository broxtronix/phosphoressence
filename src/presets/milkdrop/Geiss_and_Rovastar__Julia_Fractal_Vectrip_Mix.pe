name = 'Geiss_and_Rovastar__Julia_Fractal_Vectrip_Mix'

def initialize():
    pass

def per_frame():
    fRating=5
    pe.gamma=2
    pe.decay=0.98
    echo_zoom=1.01
    echo_alpha=0.5
    echo_orient=3
    pe.wave_mode=2
    pe.wave_additive=0
    pe.wave_usedots=0
    bModWaveAlphaByVolume=0
    pe.wave_brighten=1
    pe.wrap=1
    darken_center=0
    bRedBlueStereo=0
    brighten=0
    darken=0
    solarize=0
    pe.invert=0
    pe.wave_a=7.74
    fWaveScale=0.656
    fWaveSmoothing=0.8
    pe.wave_mystery=0
    fModWaveAlphaStart=0.75
    fModWaveAlphaEnd=0.95
    pe.warp_speed=1
    pe.warp_scale=1.772
    pe.zoomexp=1.96
    fShader=0
    pe.zoom=0.98
    pe.rot=0
    pe.cx=0.5
    pe.cy=0.5
    pe.dx=0
    pe.dy=0
    pe.warp=0.513
    pe.sx=1
    pe.sy=1
    pe.wave_r=0.5
    pe.wave_g=0.5
    pe.wave_b=0.5
    pe.wave_x=0.5
    pe.wave_y=0.5
    pe.ob_size=0.01
    pe.ob_r=0
    pe.ob_g=0
    pe.ob_b=0
    pe.ob_a=0
    pe.ib_size=0.01
    pe.ib_r=0.25
    pe.ib_g=0.25
    pe.ib_b=0.25
    pe.ib_a=0
    pe.mv_x=12
    pe.mv_y=9
    pe.mv_l=0.9
    pe.mv_r=0.6
    pe.mv_g=0.7
    pe.mv_b=0.64
    pe.mv_a=0.7
    pe.wave_x = pe.wave_x + 0.500*( 0.60*math.sin(2.121*pe.time) + 0.40*math.sin(1.621*pe.time) );
    pe.wave_y = pe.wave_y + 0.500*( 0.60*math.sin(1.742*pe.time) + 0.40*math.sin(2.322*pe.time) );
    pe.wave_r = pe.wave_r + 0.500*( 0.60*math.sin(0.823*pe.time) + 0.40*math.sin(0.916*pe.time) );
    pe.wave_g = pe.wave_g + 0.500*( 0.60*math.sin(0.900*pe.time) + 0.40*math.sin(1.023*pe.time) );
    pe.wave_b = pe.wave_b + 0.500*( 0.60*math.sin(0.808*pe.time) + 0.40*math.sin(0.949*pe.time) );
    pe.zoom = pe.zoom + 0.070*( 0.60*math.sin(0.239*pe.time) + 0.40*math.sin(0.296*pe.time) );
    pe.rot = pe.rot + 0.038*( 0.60*math.sin(0.381*pe.time) + 0.40*math.sin(0.539*pe.time) );
    pe.cx = pe.cx + 0.030*( 0.60*math.sin(0.374*pe.time) + 0.40*math.sin(0.194*pe.time) );
    pe.cy = pe.cy + 0.037*( 0.60*math.sin(0.274*pe.time) + 0.40*math.sin(0.394*pe.time) );
    pe.dx = pe.dx + 0.025*( 0.60*math.sin(0.334*pe.time) + 0.40*math.sin(0.277*pe.time) );
    pe.dy = pe.dy + 0.025*( 0.60*math.sin(0.384*pe.time) + 0.40*math.sin(0.247*pe.time) );
    pe.sx = pe.sx + 0.015*( 0.60*math.sin(0.313*pe.time) + 0.40*math.sin(0.383*pe.time) );
    pe.decay = pe.decay - 0.01*math.equal(pe.frame%50,0);
    vol = (pe.bass+pe.mid+att)/6;
    xamptarg = if_milk(math.equal(pe.frame%15,0),min(0.5*vol*pe.bass_att,0.5),xamptarg);
    xamp = xamp + 0.5*(xamptarg-xamp);
    xdir = if_milk(math.above(math.abs(xpos),xamp),-math.sign(xpos),if_milk(math.below(math.abs(xspeed),0.1),2*math.above(xpos,0)-1,xdir));
    xaccel = xdir*xamp - xpos - xspeed*0.055*math.below(math.abs(xpos),xamp);
    xspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*math.below(math.abs(xpos),xamp);
    xpos = xpos + 0.001*xspeed;
    yamptarg = if_milk(math.equal(pe.frame%15,0),min(0.3*vol*pe.treb_att,0.5),yamptarg);
    yamp = yamp + 0.5*(yamptarg-yamp);
    ydir = if_milk(math.above(math.abs(ypos),yamp),-math.sign(ypos),if_milk(math.below(math.abs(yspeed),0.1),2*math.above(ypos,0)-1,ydir));
    yaccel = ydir*yamp - ypos - yspeed*0.055*math.below(math.abs(ypos),yamp);
    yspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*math.below(math.abs(ypos),yamp);
    ypos = ypos + 0.001*yspeed;
    mv_x_speed = 16;
    mv_y_speed = 12;
    mv_x_range = 0.099;
    mv_y_range = 0.499;
    mv_x_amount = 1;
    mv_y_amount = 4;
    pe.mv_x = pe.mv_x_amount +pe.mv_x_range + pe.mv_x_range*math.sin(pe.mv_x_speed*ypos+(math.sin(pe.time*0.964)-0.5*math.cos(pe.time*0.256)));
    pe.mv_y = pe.mv_y_amount + pe.mv_y_range+ pe.mv_y_range*math.sin(pe.mv_y_speed*xpos-(math.cos(pe.time*1.345)-0.5*math.cos(pe.time*0.331)));
    pe.mv_b = pe.mv_b - 0.3*math.sin(pe.time*3.511);
    pe.mv_r = pe.mv_r + 0.25*math.cos(pe.time*0.433);
    pe.mv_g = pe.mv_g + 0.25*math.cos(pe.time*0.568);
    pe.mv_l =  24*math.sin(10*ypos)+ 32*math.cos(10*xpos);

def per_pixel():
    pe.rot=pe.rot+pe.rad*0.25*math.sin(0.3986*pe.time);

pe_presets.register(name, per_frame, initialize, per_pixel)
