from presets import PePreset

class Geiss__Sinews_2(PePreset):

    name = 'Geiss__Sinews_2'


    def per_frame(self):
        fRating=3
        pe.gamma=1.997
        pe.decay=0.98
        pe.echo_zoom=2
        pe.echo_alpha=0
        pe.echo_orient=0
        pe.wave_mode=2
        pe.wave_additive=1
        pe.wave_usedots=0
        bModWaveAlphaByVolume=0
        pe.wave_brighten=1
        pe.wrap=1
        pe.darken_center=0
        bMotionVectorsOn=0
        bRedBlueStereo=0
        pe.mv_x=12
        pe.mv_y=9
        pe.brighten=0
        pe.darken=0
        pe.solarize=0
        pe.invert=0
        pe.wave_a=2.8
        fWaveScale=1.17
        fWaveSmoothing=0.7
        pe.wave_mystery=0
        fModWaveAlphaStart=0.75
        fModWaveAlphaEnd=0.95
        pe.warp_speed=1
        pe.warp_scale=1
        pe.zoomexp=1.000415
        fShader=0
        pe.zoom=0.986
        pe.rot=-0.04
        pe.cx=0.5
        pe.cy=0.5
        pe.dx=0
        pe.dy=0
        pe.warp=0.00271
        pe.sx=1
        pe.sy=1
        pe.wave_r=0.65
        pe.wave_g=0.65
        pe.wave_b=0.65
        pe.wave_x=0.5
        pe.wave_y=0.5
        pe.ob_size=0.01
        pe.ob_r=0
        pe.ob_g=0
        pe.ob_b=0
        pe.ob_a=0.5
        pe.ib_size=0.01
        pe.ib_r=0.25
        pe.ib_g=0.25
        pe.ib_b=0.25
        pe.ib_a=0.5
        pe.wave_r = pe.wave_r + 0.350*( 0.60*math.sin(0.742*pe.time) + 0.40*math.sin(1.021*pe.time) );
        pe.wave_g = pe.wave_g + 0.350*( 0.60*math.sin(0.703*pe.time) + 0.40*math.sin(0.969*pe.time) );
        pe.wave_b = pe.wave_b + 0.350*( 0.60*math.sin(1.090*pe.time) + 0.40*math.sin(0.963*pe.time) );
        pe.rot = pe.rot + 0.010*( 0.60*math.sin(0.381*pe.time) + 0.40*math.sin(0.579*pe.time) );
        pe.cx = pe.cx + 0.110*( 0.60*math.sin(0.374*pe.time) + 0.40*math.sin(0.294*pe.time) );
        pe.cy = pe.cy + 0.110*( 0.60*math.sin(0.393*pe.time) + 0.40*math.sin(0.223*pe.time) );
        pe.ib_r = pe.ib_r + 0.1*math.sin(pe.time*0.5413);
        pe.ib_g = pe.ib_g + 0.1*math.sin(pe.time*0.6459);
        pe.ib_b = pe.ib_b + 0.1*math.sin(pe.time*0.4354);
        blah = 0.6/(pe.ib_r+pe.ib_g+pe.ib_b);
        pe.ib_r = pe.ib_r*blah; pe.ib_g = pe.ib_g*blah; pe.ib_b = pe.ib_b*blah;

    def per_pixel(self):
        pe.cx=0.5 + 0.4*math.cos(pe.ang+pe.time*0.397-pe.rad);
        pe.cy=0.5 + 0.4*math.sin(pe.ang+pe.time*0.78+pe.rad);
