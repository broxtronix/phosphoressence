from presets import PePreset

class Geiss__Octopus_Blue(PePreset):

    name = 'Geiss__Octopus_Blue'


    def per_frame(self):
        fRating=2
        pe.gamma=2
        pe.decay=0.99
        pe.echo_zoom=2
        pe.echo_alpha=0
        pe.echo_orient=0
        pe.wave_mode=2
        pe.wave_additive=0
        pe.wave_usedots=0
        bWaveThick=0
        bModWaveAlphaByVolume=1
        pe.wave_brighten=0
        pe.wrap=1
        pe.darken_center=0
        bRedBlueStereo=0
        pe.brighten=0
        pe.darken=0
        pe.solarize=0
        pe.invert=0
        pe.wave_a=1.179452
        fWaveScale=3.540751
        fWaveSmoothing=0.9
        pe.wave_mystery=0
        fModWaveAlphaStart=0.75
        fModWaveAlphaEnd=0.95
        pe.warp_speed=1
        pe.warp_scale=1
        pe.zoomexp=1
        fShader=0
        pe.zoom=1.03
        pe.rot=0
        pe.cx=0.5
        pe.cy=0.5
        pe.dx=0
        pe.dy=0
        pe.warp=0.076
        pe.sx=1
        pe.sy=1
        pe.wave_r=0.45
        pe.wave_g=0.45
        pe.wave_b=1
        pe.wave_x=0.5
        pe.wave_y=0.5
        pe.ob_size=0.01
        pe.ob_r=0
        pe.ob_g=0
        pe.ob_b=0
        pe.ob_a=0
        pe.ib_size=0.01
        pe.ib_r=0.25
        pe.ib_g=0.25
        pe.ib_b=0.25
        pe.ib_a=0
        pe.mv_x=12
        pe.mv_y=9
        pe.mv_dx=0
        pe.mv_dy=0
        pe.mv_l=0.9
        pe.mv_r=1
        pe.mv_g=1
        pe.mv_b=1
        pe.mv_a=0
        pe.wave_r = pe.wave_r + 0.200*( 0.60*math.sin(1.517*pe.time) + 0.40*math.sin(1.580*pe.time) );
        pe.wave_g = pe.wave_g + 0.200*( 0.60*math.sin(1.088*pe.time) + 0.40*math.sin(1.076*pe.time) );
        pe.wave_b = pe.wave_b + 0.300*( 0.60*math.sin(1.037*pe.time) + 0.40*math.sin(0.922*pe.time) );
        pe.rot = pe.rot + 0.040*( 0.60*math.sin(0.381*pe.time) + 0.40*math.sin(0.579*pe.time) );
        pe.cx = pe.cx + 0.110*( 0.60*math.sin(0.374*pe.time) + 0.40*math.sin(0.294*pe.time) );
        pe.cy = pe.cy + 0.110*( 0.60*math.sin(0.393*pe.time) + 0.40*math.sin(0.223*pe.time) );
        pe.decay = pe.decay - 0.02*math.equal(pe.frame%5,0);
        pe.q1=math.cos(1.41*pe.time);

    def per_pixel(self):
        pe.rot=pe.rot+0.05*math.sin(pe.rad*13.5 + pe.time*-1.3 + pe.q1*1.31);
        pe.zoom=pe.zoom+0.05*math.sin(pe.ang*8.0 + pe.rad*7.5 + pe.time*-1.63 + pe.q1);
