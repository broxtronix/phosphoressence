function Unchained__Deeper_Logic() {
  with (Math) {
    fRating=2;
    gamma=2;
    decay=0.98;
    echo_zoom=0.998169;
    echo_alpha=0.5;
    echo_orient=3;
    wave_mode=7;
    wave_additive=0;
    wave_usedots=0;
    bModWaveAlphaByVolume=0;
    wave_brighten=1;
    wrap=1;
    darken_center=0;
    bMotionVectorsOn=0;
    bRedBlueStereo=0;
    mv_x=12;
    mv_y=9;
    brighten=0;
    darken=0;
    solarize=0;
    invert=0;
    wave_a=7.74;
    fWaveScale=0.656;
    fWaveSmoothing=0.8;
    wave_mystery=0;
    fModWaveAlphaStart=0.75;
    fModWaveAlphaEnd=0.95;
    warp_speed=1;
    warp_scale=1.772;
    zoomexp=1.96;
    fShader=0.19;
    zoom=0.999698;
    rot=0;
    cx=0.5;
    cy=0.5;
    dx=0;
    dy=0;
    warp=0.513;
    sx=1;
    sy=1;
    wave_r=0.5;
    wave_g=0.5;
    wave_b=0.5;
    wave_x=0.5;
    wave_y=0.5;
    ob_size=0.01;
    ob_r=0;
    ob_g=0;
    ob_b=0;
    ob_a=0.58;
    ib_size=0.015;
    ib_r=0.55;
    ib_g=1;
    ib_b=0.4999;
    ib_a=0.23;
    warp=0;
    old_bass_flop=bass_flop;
    old_treb_flop=treb_flop;
    old_mid_flop=mid_flop;
    chaos=.9+.1*sin(pulse);
    entropy=if_milk(bnot(entropy),2,if_milk(equal(pulse,-20),1+random_integer(3),entropy));
    bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);
    bass_flop=abs(bass_flop-equal(bass_thresh,2));
    treb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);
    treb_flop=abs(treb_flop-equal(treb_thresh,2));
    mid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);
    mid_flop=abs(mid_flop-equal(mid_thresh,2));
    bass_changed=bnot(equal(old_bass_flop,bass_flop));
    mid_changed=bnot(equal(old_mid_flop,mid_flop));
    treb_changed=bnot(equal(old_treb_flop,treb_flop));
    bass_residual = bass_changed*sin(pulse*bass_thresh*.1*entropy) + bnot(bass_changed)*bass_residual;
    treb_residual = treb_changed*sin(pulse*treb_thresh*.1*entropy) + bnot(treb_changed)*treb_residual;
    mid_residual = mid_changed*sin(pulse*mid_thresh*.1*entropy) + bnot(mid_changed)*mid_residual;
    pulse=if_milk(above(abs(pulse),20),-20,pulse+.2*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.025);
    q1=mid_residual;
    q2=bass_residual;
    q3=treb_residual;
    q4=sin(pulse);
    q5=sin(pulse/2);
    wave_r=wave_r+.5*bass_residual;
    wave_r=wave_g+.5*mid_residual;
    wave_r=wave_b+.5*treb_residual;
    wave_mystery=mid_residual;
    ob_r=if_milk(bass_flop,treb_flop,wave_r);
    ob_b=if_milk(treb_flop,mid_flop,wave_b);
    ob_g=if_milk(mid_flop,bass_flop,wave_g);
    ob_a=.03+.02*wave_r;
    ob_size=.05+.04*treb_residual;
    ib_r=if_milk(bass_flop,ob_b,ob_g);
    ib_b=if_milk(treb_flop,ob_g,ob_r);
    ib_g=if_milk(mid_flop,ob_r,ob_b);
    ib_a=.03+.02*wave_g;
    ib_size=.05+.04*bass_residual;
    // per_pixel_1=radix=if_milk(above(q3,0),min(x,y),max(x,y));
    // per_pixel_2=radix=if_milk(above(q2,0),min(radix,rad),max(radix,rad));
    // per_pixel_3=rot=if_milk(above(q4,0),rad*.2*q5,0);
    // per_pixel_4=zoom=if_milk(above(q2,0),zoom,if_milk(above(q3,0),1+q1*.05,1+.07*cos(radix*10*q1)));
  }
}
register_preset( Unchained__Deeper_Logic);
